{"name":"SALib","tagline":"Sensitivity Analysis Library in Python (Numpy). Contains Sobol, Morris, and FAST methods.","body":"##Sensitivity Analysis Library (SALib)\r\n\r\nPython implementations of commonly used sensitivity analysis methods. Useful in systems modeling to calculate the effects of model inputs or exogenous factors on outputs of interest.\r\n\r\n**Requirements:** [NumPy](http://www.numpy.org/), [SciPy](http://www.scipy.org/), [matplotlib](http://matplotlib.org/)\r\n\r\n**Installation:** `pip install SALib` or `python setup.py install`\r\n\r\n**Build Status:** [![Build Status](https://travis-ci.org/SALib/SALib.svg?branch=master)](https://travis-ci.org/SALib/SALib)    **Test Coverage:** [![Coverage Status](https://img.shields.io/coveralls/SALib/SALib.svg)](https://coveralls.io/r/SALib/SALib)\r\n\r\n**Methods included:**\r\n* Sobol Sensitivity Analysis ([Sobol 2001](http://www.sciencedirect.com/science/article/pii/S0378475400002706), [Saltelli 2002](http://www.sciencedirect.com/science/article/pii/S0010465502002801), [Saltelli et al. 2010](http://www.sciencedirect.com/science/article/pii/S0010465509003087))\r\n* Method of Morris, including groups and optimal trajectories ([Morris 1991](http://www.tandfonline.com/doi/abs/10.1080/00401706.1991.10484804), [Campolongo et al. 2007](http://www.sciencedirect.com/science/article/pii/S1364815206002805))\r\n* Fourier Amplitude Sensitivity Test (FAST) ([Cukier et al. 1973](http://scitation.aip.org/content/aip/journal/jcp/59/8/10.1063/1.1680571), [Saltelli et al. 1999](http://amstat.tandfonline.com/doi/abs/10.1080/00401706.1999.10485594))\r\n* Delta Moment-Independent Measure ([Borgonovo 2007](http://www.sciencedirect.com/science/article/pii/S0951832006000883), [Plischke et al. 2013](http://www.sciencedirect.com/science/article/pii/S0377221712008995))\r\n* Derivative-based Global Sensitivity Measure (DGSM) ([Sobol and Kucherenko 2009](http://www.sciencedirect.com/science/article/pii/S0378475409000354))\r\n* Fractional Factorial Sensitivity Analysis ([Saltelli et al. 2008](http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470059974.html))\r\n\r\n**Contributing:** see [here](CONTRIBUTING.md)\r\n\r\n### Quick Start\r\n```python\r\nfrom SALib.sample import saltelli\r\nfrom SALib.analyze import sobol\r\nfrom SALib.test_functions import Ishigami\r\nimport numpy as np\r\n\r\nproblem = {\r\n  'num_vars': 3, \r\n  'names': ['x1', 'x2', 'x3'], \r\n  'bounds': [[-3.14159265359, 3.14159265359], \r\n            [-3.14159265359, 3.14159265359], \r\n             [-3.14159265359, 3.14159265359]]\r\n}\r\n\r\n# Generate samples\r\nparam_values = saltelli.sample(problem, 1000, calc_second_order=True)\r\n\r\n# Run model (example)\r\nY = Ishigami.evaluate(param_values)\r\n\r\n# Perform analysis\r\nSi = sobol.analyze(problem, Y, print_to_console=False)\r\n# Returns a dictionary with keys 'S1', 'S1_conf', 'ST', and 'ST_conf'\r\n# (first and total-order indices with bootstrap confidence intervals)\r\n```\r\n\r\nIt's also possible to specify the parameter bounds in a file with 3 columns:\r\n```\r\n# name lower_bound upper_bound\r\nP1 0.0 1.0\r\nP2 0.0 5.0\r\n...etc.\r\n```\r\n\r\nThen the `problem` dictionary above can be created from the `read_param_file` function:\r\n```python\r\nfrom SALib.util import read_param_file\r\nproblem = read_param_file('/path/to/file.txt')\r\n# ... same as above\r\n```\r\n\r\nLots of other options are included for parameter files, as well as a command-line interface. See the [advanced readme](README-advanced.md).\r\n\r\nAlso check out the [examples](https://github.com/SALib/SALib/tree/master/examples) for a full description of options for each method.\r\n\r\n### License\r\nCopyright (C) 2013-2015 Jon Herman, Will Usher, and others. Versions v0.5 and later are released under the [MIT license](LICENSE.md).\r\n","google":"UA-10257113-9","note":"Don't delete this file! It's used internally to help with page regeneration."}